cell(0,0,0). cell(0,0,1). cell(0,0,2). cell(0,0,3). cell(0,0,4).
 cell(0,0,5). cell(0,0,6). cell(0,0,7). cell(0,0,8). cell(0,0,9). cell(0,0,10). 
cell(0,1,0). cell(0,1,1). cell(0,1,2). cell(0,1,3). cell(0,1,4). 
cell(0,1,5). cell(0,1,6). cell(0,1,7). cell(0,1,8). cell(0,1,9). cell(0,1,10). 
cell(0,2,0). cell(0,2,1). cell(0,2,2). cell(0,2,3). cell(0,2,4). 
cell(0,2,5). cell(0,2,6). cell(0,2,7). cell(0,2,8). cell(0,2,9). cell(0,2,10). 
cell(0,3,0). cell(0,3,1). cell(0,3,2). cell(0,3,3). cell(0,3,4). 
cell(0,3,5). cell(0,3,6). cell(0,3,7). cell(0,3,8). cell(0,3,9). cell(0,3,10). 
cell(0,4,0). cell(0,4,1). cell(0,4,2). cell(0,4,3). cell(0,4,4). 
cell(0,4,5). cell(0,4,6). cell(0,4,7). cell(0,4,8). cell(0,4,9). cell(0,4,10). 
cell(0,5,0). cell(0,5,1). cell(0,5,2). cell(0,5,3). cell(0,5,4). 
cell(0,5,5). cell(0,5,6). cell(0,5,7). cell(0,5,8). cell(0,5,9). cell(0,5,10). 
cell(0,6,0). cell(0,6,1). cell(0,6,2). cell(0,6,3). cell(0,6,4). 
cell(0,6,5). cell(0,6,6). cell(0,6,7). cell(0,6,8). cell(0,6,9). cell(0,6,10). 
cell(0,7,0). cell(0,7,1). cell(0,7,2). cell(0,7,3). cell(0,7,4). 
cell(0,7,5). cell(0,7,6). cell(0,7,7). cell(0,7,8). cell(0,7,9). cell(0,7,10). 
cell(0,8,0). cell(0,8,1). cell(0,8,2). cell(0,8,3). cell(0,8,4). 
cell(0,8,5). cell(0,8,6). cell(0,8,7). cell(0,8,8). cell(0,8,9). cell(0,8,10).
 cell(0,9,0). cell(0,9,1). cell(0,9,2). cell(0,9,3). cell(0,9,4). 
 cell(0,9,5). cell(0,9,6). cell(0,9,7). cell(0,9,8). cell(0,9,9). cell(0,9,10). 
cell(0,10,0). cell(0,10,1). cell(0,10,2). cell(0,10,3). cell(0,10,4). 
cell(0,10,5). cell(0,10,6). cell(0,10,7). cell(0,10,8). cell(0,10,9). cell(0,10,10).

% To include to know the color of ai

%AI HAS TO COVER ONLY ONE ROLE
:- ai(X),ai(Y),X != Y.
%THERE ARE ONLY TWO ROLES
:- ai(X),X>2.
:- ai(X),X<1.

%IF NOT SPECIFIED THEN AI TAKES THE ROLE OF PLAYER 2
specified:-ai(X).
control(2):-not specified.

control(X):-ai(X).

%SOLVER

response(R,C)|notResp(R,C):-cell(0,R,C).

:- not #count{R,C:response(R,C)} = 1.
